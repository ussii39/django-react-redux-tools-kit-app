const test = (loginuser: any) => {
  return new Promise((resolve, reject) => {
    const time: any = setTimeout(() => {
      resolve(loginuser);
    }, 100);
    console.log(time);
    if (time > 10) {
      clearTimeout(time);
    } else if (time > 20) {
      SetStatus("サーバーが重くなっています");
      // history.push("/tasks");
    }
  });
};

const test5 = async (token: any) => {
  const headers = {
    Accept: "application/json",
    "Content-Type": "application/json",
  };
  const response = await fetch(`${process.env.REACT_APP_API_URL}/api/users`, {
    method: "POST",
    body: JSON.stringify({ token: token }),
    headers,
  })
    .then((res) => {
      return res.json();
    })
    .then((res) => {
      console.log(res);
      return res;
    });
  console.log(response, "かえってきあした");
  return response;
};

test(loginuser)
  .then((value: any) => {
    const l = value.map((login: LOGIN_USER) => {
      return login.token;
    });
    const test3 = async () => {
      const a: any = await test(l);
      const yy = await test5(a);
      Setsample(a);
      console.log(yy, "value");
    };
    test3();
    return l;
  })
  .catch((error) => {
    // console.log(error);
  })
  .finally(() => {});
